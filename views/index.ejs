<html>
    <head>
        <meta charset="utf-8">
        <link rel="stylesheet" href="style/style.css">
        <link rel="icon" type="image/png" href="img/cast_favicon.png" />
    </head>
    <body>
        <span id="features"></span></p>
        <div id="settings">
          <a href="/settings"><img src="img/tools.png"></a>
        </div>
        <div id="slider">
          <button id="hideshow" onclick="hideshow()"><img src="img/slider.svg"></button>
          <input id ="mySlider" type="range" value="0" max="200" min="0" step="10" >
        </div>
        <div id="battery">
          <img src="img/battery_3_4.svg">
        </div>
        <span id="example"></span>
        <img id="videofeed" src="http://192.168.10.1:8080/stream/video.mjpeg" alt="If you see this message check the availability of video stream">
        <div id="sticksContainer">
            <div id="stick1"></div>
            <div id="stick2"></div>
        </div>
    </body>
    <script type="text/javascript" src="javascripts/virtualjoystick.js"></script>
    <script src="javascripts/jquery-1.11.2.min.js"></script>
    <script src="javascripts/socket.io.js"></script>
    <script src="javascripts/gyro.js"></script>
    <script type="text/javascript">
      //Define refresh interval (in seconds)
      var interval = 1/10;
      var valY=0;
      var valX=0;
      var previousLeftIsZero = true;
      var previousRightIsZero= true;
      var control_mode = '<%= control_mode %>';
      var acc = <%= acc_mode %>;
      var driver= <%= driver %>;
      var cameraman= <%= cameraman %>;
      //console.log("Touchscreen is", VirtualJoystick.touchScreenAvailable() ? "available" : "not available");
      var socket = io.connect('http://192.168.10.1:3000');
      var slide = document.getElementById('mySlider');
      slide.style.visibility = 'hidden';
      var previousSldIsZero=true;

      //LEFT Stick
      if(driver == true){
        var joystickL = new VirtualJoystick({
          container : document.getElementById('stick1'),
          strokeStyle : 'cyan',
          mouseSupport  : true,
          limitStickTravel: true,
  //      stationaryBase:true,
  //      baseX   : 200,
  //      baseY   : 200,
          stickRadius : 200
        });
      };
          
      // RIGHT Stick
      if (cameraman == true) {
        var joystickR = new VirtualJoystick({
          container : document.getElementById('stick2'),
          strokeStyle : 'orange',
          mouseSupport  : true,
          limitStickTravel: true,
          stickRadius : 200
        });
      };
 
      //Accelerometer initialisation
      gyro.frequency = 100;
      gyro.startTracking(function(o) {
        // o.Y varie de -5 à 5 lors de l'inclinaison de l'iphone (avant basculement de l'écran), on multiplie par 40 pour arriver à 200
          valY= (o.y)* - 40;
          valX= (o.x)* - 40; 
      });

      // INTERVAL EVENT
      setInterval(function(){

        slider= document.getElementById("mySlider").value * -1;
        if (slider!=0){
          socket.emit('coordinateRob',{DXL: joystickL.deltaX(),DYL: slider, control_md: control_mode });
          if (previousSldIsZero ==true){
            previousSldIsZero=false;
          }else{
            previousSldIsZero==false;
          }
        }else{
          if(previousSldIsZero==false){
            previousSldIsZero=true;
            socket.emit('coordinateRob',{DXL: joystickL.deltaX(),DYL: slider, control_md: control_mode });
          }

          //Left Stick coordinates
          if (driver == true) {
            // If previous value is 0,0
            if ((joystickL.deltaX() == 0) && (joystickL.deltaY() == 0) && previousLeftIsZero==true){

            }else{
                socket.emit('coordinateRob',{DXL: joystickL.deltaX(),DYL: joystickL.deltaY(), control_md: control_mode });
              if ((joystickL.deltaX() == 0) && (joystickL.deltaY() == 0)){
                previousLeftIsZero=true;
              }else {
                previousLeftIsZero=false; 
              }
            }
          };

          // Right Stick coordinates
          if (cameraman ==true) {
            if (joystickR.deltaX() == 0 && joystickR.deltaY() == 0 && previousRightIsZero==true){
            }else {
              console.log("acc X : "+ valX + "acc Y : " + valY);
              // Accelerometer mode ?
              if(acc==true){
                socket.emit('coordinateCam',{DXR: valX, DYR: valY});
              }else{
                socket.emit('coordinateCam',{DXR: joystickR.deltaX(),DYR: joystickR.deltaY()});
              }

              if ((joystickR.deltaX() == 0) && (joystickR.deltaY() == 0)){
                previousRightIsZero=true;
              }else {
                previousRightIsZero=false; 
              }
            }  
          };
        }
      }, interval *1000);
      
      var button = document.getElementById('hideshow'); 

      function hideshow() {
          if (slide.style.visibility !== 'hidden') {
              slide.style.visibility = 'hidden';
              var input = document.getElementById("mySlider");
              input.value = 0;
          }
          else {
              slide.style.visibility = 'visible';
          }
      };
      

      // Battery code 

          //      <img <% 
          //         if(battery >=7.9) {
          //       %> 
          //         src="img/battery_4_4.svg" 
          //      <%
          //         } else if(battery >= 7.3 && battery < 7.9) {
          //       %>
          //         src="img/battery_3_4.svg"
          //       <%
          //         } else if(battery >= 6.6 && battery < 7.3) {
          //       %>
          //         src="img/battery_2_4.svg"
          //       <%
          //         } else if(battery >= 6.5 && battery < 6.6) {
          //       %>
          //         src="img/battery_1_4.svg"
          //       <%
          //         } else if(battery < 6.5) {%>
          //         src="img/battery_0_4.svg"
          //       <%
          //         }
          //       %>
          // >
    </script> 
</html>
